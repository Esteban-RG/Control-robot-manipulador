#!/usr/bin/env python3
"""
Sistema de Control de Brazo Rob√≥tico SCARA
Punto de entrada principal del sistema
"""

import sys
import argparse
from robot_interface import RobotInterface
import tkinter as tk

def main():
    """Funci√≥n principal del sistema."""
    parser = argparse.ArgumentParser(description='Sistema de Control de Brazo Rob√≥tico SCARA')
    parser.add_argument('--gui', action='store_true', help='Iniciar interfaz gr√°fica')
    parser.add_argument('--port', type=str, default='/dev/ttyUSB0', help='Puerto serial')
    parser.add_argument('--demo', action='store_true', help='Ejecutar demo autom√°tico')
    
    args = parser.parse_args()
    
    if args.gui or len(sys.argv) == 1:
        # Iniciar interfaz gr√°fica
        print("ü§ñ Iniciando Sistema de Control de Brazo Rob√≥tico SCARA")
        print("üì± Cargando interfaz gr√°fica...")
        
        root = tk.Tk()
        app = RobotInterface(root)
        
        # Configurar cierre de ventana
        root.protocol("WM_DELETE_WINDOW", app.on_closing)
        
        print("‚úÖ Interfaz lista. ¬°Bienvenido!")
        root.mainloop()
        
    elif args.demo:
        # Ejecutar demo autom√°tico
        print("üé¨ Ejecutando demo autom√°tico...")
        run_demo(args.port)
        
    else:
        print("‚ùå Opci√≥n no v√°lida. Usa --help para ver opciones disponibles.")

def run_demo(port):
    """Ejecuta una demostraci√≥n autom√°tica del sistema."""
    try:
        from serial_communication import SerialConnection
        from robot_actions import RobotActions
        from robot_routines import RobotRoutines
        from vision_system import VisionSystem
        
        print("üîå Conectando al robot...")
        serial_conn = SerialConnection(port=port)
        
        if not serial_conn.open():
            print("‚ùå No se pudo conectar al robot")
            return
            
        robot = RobotActions(serial_conn)
        routines = RobotRoutines(robot)
        
        print("‚úÖ Robot conectado")
        print("ü§ñ Ejecutando secuencia de demostraci√≥n...")
        
        # Secuencia de demostraci√≥n
        print("1Ô∏è‚É£ Moviendo a posici√≥n home...")
        robot.home_position()
        
        print("2Ô∏è‚É£ Ejecutando rutina de cuadrado...")
        routines.square_routine(size=30, speed=40)
        
        print("3Ô∏è‚É£ Ejecutando rutina de c√≠rculo...")
        routines.circle_routine(radius=20, speed=40)
        
        print("4Ô∏è‚É£ Demostraci√≥n de pick & place...")
        robot.pick_and_place(20, 20, -20, -20)
        
        print("5Ô∏è‚É£ Volviendo a posici√≥n home...")
        robot.home_position()
        
        print("‚úÖ Demostraci√≥n completada exitosamente!")
        
        # Cerrar conexi√≥n
        serial_conn.close()
        
    except Exception as e:
        print(f"‚ùå Error en demo: {e}")

if __name__ == "__main__":
    main()